/**
 * vue-formly v0.1.0
 * https://github.com/matt-sanders/vue-formly
 * Released under the MIT License.
 */

!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.VueFormly=t():e.VueFormly=t()}(this,function(){return function(e){function t(o){if(n[o])return n[o].exports;var l=n[o]={exports:{},id:o,loaded:!1};return e[o].call(l.exports,l,l.exports,t),l.loaded=!0,l.exports}var o=window.webpackJsonpVueFormly;window.webpackJsonpVueFormly=function(n,r){for(var f,u,i=0,d=[];i<n.length;i++)u=n[i],l[u]&&d.push.apply(d,l[u]),l[u]=0;for(f in r)e[f]=r[f];for(o&&o(n,r);d.length;)d.shift().call(null,t)};var n={},l={0:0};return t.e=function(e,o){if(0===l[e])return o.call(null,t);if(void 0!==l[e])l[e].push(o);else{l[e]=[o];var n=document.getElementsByTagName("head")[0],r=document.createElement("script");r.type="text/javascript",r.charset="utf-8",r.async=!0,r.src=t.p+""+e+".vue-formly.min.js",n.appendChild(r)}},t.m=e,t.c=n,t.p="",t(0)}([function(e,t,o){"use strict";function n(e){return e&&e.__esModule?e:{"default":e}}Object.defineProperty(t,"__esModule",{value:!0});var l=o(1),r=n(l),f={addType:function(e,t){Vue.$formlyFields[e]=t},getTypes:function(){return Vue.$formlyFields},install:function(e,t){f.installed||((0,r["default"])(e),e.$formlyFields={})}};"undefined"!=typeof window&&window.Vue&&(window.Vue.use(f),window.Vue.$formly=f),t["default"]=f},function(e,t,o){"use strict";function n(e){return e&&e.__esModule?e:{"default":e}}Object.defineProperty(t,"__esModule",{value:!0}),t["default"]=function(e){e.component("formly-form",r["default"]),e.component("formly-field",function(e){o.e(1,function(t){var o=[t(5)];e.apply(null,o)}.bind(this))})};var l=o(2),r=n(l)},function(e,t,o){var n,l;n=o(3),l=o(4),e.exports=n||{},e.exports.__esModule&&(e.exports=e.exports["default"]),l&&(("function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports).template=l)},function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t["default"]={props:["fields","model"]}},function(e,t){e.exports=' <fieldset> <formly-field v-for="field in fields" :field=field :model.sync=model[field.key]></formly-field> </fieldset> '}])});